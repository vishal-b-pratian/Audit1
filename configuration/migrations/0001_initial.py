# Generated by Django 4.1.1 on 2022-09-22 16:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Channel Id",
                    ),
                ),
                (
                    "url",
                    models.URLField(null=True, unique=True, verbose_name="Channel Url"),
                ),
                (
                    "weightage",
                    models.FloatField(default=1.0, null=True, verbose_name="Weightage"),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ChannelData",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Data Id",
                    ),
                ),
                (
                    "scraped_data",
                    models.TextField(null=True, verbose_name="Scarped Data"),
                ),
                (
                    "processed_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="Processed Data"
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="configuration.channel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChannelType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Channel Type"
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanyDetails",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Company Id",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200, null=True, verbose_name="Company Name"
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ScoreCard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Score Id",
                    ),
                ),
                (
                    "dna_alignment",
                    models.FloatField(default=0.0, verbose_name="DNA Alignment"),
                ),
                ("posmo_tag", models.FloatField(default=0.0, verbose_name="Posmo Tag")),
                (
                    "differentiator",
                    models.FloatField(default=0.0, verbose_name="Differentiator"),
                ),
                (
                    "value_proposition",
                    models.FloatField(default=0.0, verbose_name="Value Proposition"),
                ),
                ("tagline", models.FloatField(default=0.0, verbose_name="Tagline")),
                (
                    "total_score",
                    models.FloatField(default=0.0, verbose_name="Total Score"),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="configuration.channeldata",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MessageArchitecture",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="MA Id",
                    ),
                ),
                (
                    "company",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="configuration.companydetails",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChannelTypeWeightage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weightage",
                    models.FloatField(default=1.0, null=True, verbose_name="Weightage"),
                ),
                (
                    "channel_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="channel_type",
                        to="configuration.channeltype",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company",
                        to="configuration.companydetails",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="channel",
            name="company",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="configuration.companydetails",
            ),
        ),
        migrations.AddField(
            model_name="channel",
            name="type_name",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="type",
                to="configuration.channeltype",
            ),
        ),
        migrations.CreateModel(
            name="Measures",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Measure Id",
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        choices=[
                            ("dna", "DNA"),
                            ("posmotag", "POSMO TAG"),
                            ("differentiator", "Differentiator"),
                            ("value proposition", "Value Proposition"),
                            ("tagline", "Tagline"),
                        ],
                        max_length=30,
                        verbose_name="Field Name",
                    ),
                ),
                (
                    "value",
                    models.TextField(max_length=1000, null=True, verbose_name="Value"),
                ),
                (
                    "weightage",
                    models.FloatField(default=1.0, null=True, verbose_name="Weightage"),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "message_architecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measure_field",
                        to="configuration.messagearchitecture",
                    ),
                ),
            ],
            options={
                "unique_together": {("message_architecture", "field_name")},
            },
        ),
    ]
