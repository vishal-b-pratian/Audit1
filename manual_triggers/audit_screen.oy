from utils import wait, pretty_print_response
import requests as rq
import urllib3
from utils import url, company_id, select_option
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def get_company_audit_score():
    wait('Company Audit Scores:')
    response = rq.get(url + 'getCompanyAuditScore', params={'CompanyId': company_id},
                      verify=False)

    pretty_print_response(response)


def all_audits():
    wait('All Audits List:')
    response = rq.get(url + 'getAllAudits', params={'CompanyId': company_id},
                      verify=False)

    pretty_print_response(response)


def audit_screen():
    wait('Audit Screen Demo')
    get_company_audit_score()
    all_audits()


def viewAuditSummary():
    wait('Audit Summary')
    print('Requesting for available Audits:')
    response = rq.get(url + 'getAllAudits', params={'CompanyId': company_id},
                      verify=False).json()
    response = {audits['AuditName']: audits['AuditId'] for audits in response}
    audit_id = select_option(response, 'Select An Audit to view Info')

    response = rq.get(url + 'viewAuditSummary', params={'CompanyId': company_id,
                                                        'AuditId': audit_id},

                      verify=False)
    pretty_print_response(response)


def addAudit():
    wait('Adding new Audits')
    print('Getting Fields by posting empty json')
    response = rq.post(url + 'addAudit', params={'CompanyId': company_id},
                       verify=False).json()
    print(response)
    keys = list(response.keys())
    status_code = 0

    while status_code != 200:
        payload = {}
        temp_keys = keys + []
        if 'CompanyId' in temp_keys:
            payload['CompanyId'] = company_id
            temp_keys.remove('CompanyId')

        for key in temp_keys:
            payload[key] = input(f'Enter value for {key}: ')

        response = rq.post(url + 'addAudit', json=payload,
                           verify=False)
        status_code = response.status_code
        pretty_print_response(response)
        if status_code != 200:
            print('Request not successful')

    print('Validating addition of new Audit...')
    viewAuditSummary()


def editAudit():
    wait('Edit Audits')
    print('Getting Fields by posting empty json')
    response = rq.post(url + 'addAudit', params={'CompanyId': company_id},
                       verify=False).json()
    print(response)
    keys = list(response.keys())
    status_code = 0

    print('Fetching all Audits')
    response = rq.get(url + 'getAllAudits', params={'CompanyId': company_id},
                      verify=False).json()
    response = {audits['AuditName']: audits['AuditId'] for audits in response}
    audit_id = select_option(response, 'Select An Audit to edit')

    while status_code != 200:
        payload = {'AuditId': audit_id}
        temp_keys = keys + []
        if 'CompanyId' in temp_keys:
            payload['CompanyId'] = company_id
            temp_keys.remove('CompanyId')

        for key in temp_keys:
            input_value = input(f'Enter value for {key}: ')
            if input_value:
                payload[key] = input_value

        response = rq.post(url + 'editAudit', json=payload,
                           verify=False)
        status_code = response.status_code
        pretty_print_response(response)
        if status_code != 200:
            print('Request not successful')

    print('New Audit Info')
    response = rq.get(url + 'allAuditInfo', params={'CompanyId': company_id,
                                                    'AuditId': audit_id},
                      verify=False)
    pretty_print_response(response)


def deleteAudit():
    print('Fetching all Audits')
    response = rq.get(url + 'getAllAudits', params={'CompanyId': company_id},
                      verify=False).json()
    response = {audits['AuditName']: audits['AuditId'] for audits in response}
    audit_id = select_option(response, 'Select An Audit to Delete')
    response = rq.get(url + 'deleteAudit', params={'CompanyId': company_id,
                                                   'AuditId': audit_id},
                      verify=False)
    pretty_print_response(response)
    print('Available Audit List')
    response = rq.get(url + 'getAllAudits', params={'CompanyId': company_id},
                      verify=False).json()
    response = [audits['AuditName']for audits in response]
    print("\n".join(response))


def inactiveAuditInfo():
    print('Fetching all Audits')
    response = rq.get(url + 'getAllAudits', params={'CompanyId': company_id},
                      verify=False).json()
    response = {audits['AuditName']: audits['AuditId'] for audits in response}
    audit_id = select_option(response, 'Select An Audit to Delete')
    response = rq.get(url + 'deleteAudit', params={'CompanyId': company_id,
                                                   'AuditId': audit_id},
                      verify=False)
    pretty_print_response(response)
    print('Available Audit List')
    response = rq.get(url + 'getAllAudits', params={'CompanyId': company_id},
                      verify=False).json()
    response = [audits['AuditName']for audits in response]
    print("\n".join(response))



# def getAuditScore():
#     pass


def demo_audit_screen():
    audit_screen()
    viewAuditSummary()
    addAudit()
    editAudit()
    deleteAudit()


demo_audit_screen()
